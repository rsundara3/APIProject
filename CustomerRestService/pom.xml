<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.thomsonreuters</groupId>
	<artifactId>parent-corporate</artifactId>
	<version>5.4.6-38</version>
	<packaging>pom</packaging>
	<name>parent-corporate</name>
	<description>Super POM for all aegisoft and athena projects.</description>
	<distributionManagement>
		<snapshotRepository>
			<id>snapshots</id>
			<name>10.5.108.37:8080/artifactory-snapshots</name>
			<url>http://10.5.108.37:8080/artifactory/libs-snapshot-local</url>
		</snapshotRepository>
		<repository>
			<id>internal.release</id>
			<name>Internal Release Repository</name>
			<url>http://10.5.108.37:8080/artifactory/libs-release-local/</url>
		</repository>
	</distributionManagement>
	<issueManagement>
		<system>jira</system>
		<url>https://support.aegisoft.com/secure/Dashboard.jspa</url>
	</issueManagement>
	<organization>
		<name>Thomson Reuters Athena Trading</name>
		<url>http://thomsonreuters.com/products_services/financial/athena_trading/</url>
	</organization>
	<ciManagement>
		<system>Jenkins</system>
		<url>http://jenkins.aegisoft.com/</url>
	</ciManagement>
	<scm>
		<connection>${scm.aegisoft.base}/maven/corporate</connection>
		<url>${scm.aegisoft.base}/maven/corporate</url>
	</scm>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<build.number /> <!-- used in manifest, denotes Jenkins build # (default=empty string) -->
		<svn.revision /> <!-- used in manifest (default=empty string) -->
		<scm.branch>trunk</scm.branch> <!-- used by reporting plugins to access source -->
		<scm.aegisoft.base>scm:svn:http://agssvn01.aegisoft.com/svn/projects/aegisoft/${scm.branch}</scm.aegisoft.base>
		<cobertura.version>1.9.2</cobertura.version>
		<api.diff.version>5.2.0</api.diff.version>
		<dependencies.txt.out>classes/META-INF/dependencies.txt</dependencies.txt.out>
		<cobertura.runtime.version>1.9.4.1</cobertura.runtime.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>clirr-maven-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<comparisonVersion>${api.diff.version}</comparisonVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-ant-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.6</version>
					<dependencies>
						<dependency>
							<groupId>org.tigris.subclipse</groupId>
							<artifactId>svnClientAdapter</artifactId>
							<version>1.3.1</version>
						</dependency>
						<dependency>
							<groupId>org.tigris.subclipse</groupId>
							<artifactId>svnant</artifactId>
							<version>1.3.1</version>
						</dependency>
						<dependency>
							<groupId>com.zelix</groupId>
							<artifactId>ZKM</artifactId>
							<version>6.1.8</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
						<compilerVersion>1.7</compilerVersion>
						<!-- <verbose>true</verbose> -->
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<executions>
						<execution>
							<id>create-dependency-list</id>
							<goals>
								<goal>list</goal>
							</goals>
							<phase>prepare-package</phase>
							<configuration>
								<outputScope>false</outputScope>
								<outputFile>${project.build.directory}/${dependencies.txt.out}</outputFile>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<configuration>
						<additionalBuildcommands>
							<buildcommand>net.sf.eclipsecs.core.CheckstyleBuilder</buildcommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
						</additionalProjectnatures>
						<!-- Copy checkstyle config files from artifactory into local project -->
						<additionalConfig>
							<file>
								<name>.checkstyle</name>
								<location>/checkstyle/aegisoft-eclipse.checkstyle</location>
							</file>
							<file>
								<name>checkstyle/CheckstyleChecks.xml</name>
								<location>/checkstyle/CheckstyleChecks.xml</location>
							</file>
							<file>
								<name>checkstyle/ContinuousIntegrationGameChecks.xml</name>
								<location>/checkstyle/ContinuousIntegrationGameChecks.xml</location>
							</file>
							<file>
								<name>checkstyle/LoggingChecks.xml</name>
								<location>/checkstyle/LoggingChecks.xml</location>
							</file>
						</additionalConfig>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>com.thomsonreuters</groupId>
							<artifactId>build-tools</artifactId>
							<version>0.0.6</version>
							<type>jar</type>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.12</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>2.12</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
					<executions>
						<execution>
							<id>install-dependency-list</id>
							<phase>install</phase>
							<goals>
								<goal>install-file</goal>
							</goals>
							<configuration>
								<file>${project.build.directory}/${dependencies.txt.out}</file>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<packaging>txt</packaging>
								<version>${project.version}</version>
								<classifier>dependencies</classifier>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathLayoutType>custom</classpathLayoutType>
								<customClasspathLayout>${artifact.artifactId}.${artifact.extension}</customClasspathLayout>
							</manifest>
							<manifestEntries>
								<Specification-Version>${project.version}</Specification-Version>
								<Specification-Title>${project.name}</Specification-Title>
								<Specification-Vendor>${project.organization.name}</Specification-Vendor>
								<Implementation-Version>${aegis.revision}</Implementation-Version>
								<Permissions>all-permissions</Permissions>
								<Trusted-Library>true</Trusted-Library>
								<Application-Name>${project.name}</Application-Name>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12</version>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>2.12</version>
						</dependency>
					</dependencies>
					<configuration>
						<perCoreThreadCount>false</perCoreThreadCount>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>1.3.1</version>
					<executions>
						<execution>
							<id>compare-dependencies</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>compare-dependencies</goal>
							</goals>
							<configuration>
								<remotePom>${project.groupId}:${project.artifactId}:${previous.version}</remotePom>
								<reportOutputFile>${project.build.directory}/${project.artifactId}-${previous.version}-to-${project.version}.dep.comp.txt</reportOutputFile>
								<excludes>
									<exclude>com.thomsonreuters:*:*:*</exclude>
								</excludes>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>analytics</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>checkstyle</id>
								<phase>initialize</phase>
								<goals>
									<goal>checkstyle</goal>
								</goals>
								<configuration>
									<configLocation>/checkstyle/ContinuousIntegrationGameChecks.xml</configLocation>
									<propertyExpansion>cacheFile=${project.build.directory}/checkstyle-cachefile</propertyExpansion>
									<linkXRef>false</linkXRef>
								</configuration>
							</execution>
						</executions>
				
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>cc-instr</id>
			<activation>
				<property>
					<name>cc-instr</name>
				</property>
			</activation>
			<properties>
				<cobertura.maxmem>1024M</cobertura.maxmem>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<configuration>
						</configuration>
						<executions>
							<execution>
								<id>instrument-code</id>
								<phase>process-classes</phase>
								<goals>
									<goal>instrument</goal>
								</goals>
								<configuration>
									<attach>true</attach>
									<instrumentation>
										<maxmem>1024M</maxmem>
									</instrumentation>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
						<inherited>true</inherited>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>net.sourceforge.cobertura</groupId>
					<artifactId>cobertura-runtime</artifactId>
					<version>${cobertura.runtime.version}</version>
					<scope>provided</scope>
					<type>pom</type>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>cc-run</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-install-plugin</artifactId>
						<executions>
							<execution>
								<id>install-test-ser</id>
								<phase>install</phase>
								<goals>
									<goal>install-file</goal>
								</goals>
								<configuration>
									<file>${project.build.directory}/${project.artifactId}-${project.version}-cobertura.ser</file>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<packaging>ser</packaging>
									<version>${project.version}</version>
									<classifier>cobertura</classifier>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>net.sourceforge.cobertura</groupId>
					<artifactId>cobertura-runtime</artifactId>
					<version>${cobertura.runtime.version}</version>
					<scope>provided</scope>
					<type>pom</type>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
